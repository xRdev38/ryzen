version: 2.1

orbs:
  nx: nrwl/nx@1.6.1

jobs:
  agent:
    docker:
      - image: cimg/node:lts-browsers
    parameters:
      ordinal:
        type: integer
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Start the agent << parameters.ordinal >>
          command: npx nx-cloud start-agent
          no_output_timeout: 60m
  main:
    docker:
      - image: cimg/node:lts-browsers
    environment:
      NX_CLOUD_DISTRIBUTED_EXECUTION: 'true'
      working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - nx/set-shas:
          main-branch-name: 'master'
      - run:
          name: Initialize the Nx Cloud distributed CI run
          command: npx nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      - run:
          name: Check format
          command: npx nx-cloud record -- npx nx format:check --base=$NX_BASE --head=$NX_HEAD
      - run:
          name: Run lint
          command: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=lint --parallel=3
      - run:
          name: Run test
          command: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=test --parallel=3 --ci --code-coverage
      - run:
          name: Run build
          command: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=build --parallel=3
      - run:
          name: Stop all agents
          command: npx nx-cloud stop-all-agents
          when: always

  build-deploy:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - nx/set-shas:
          error-on-no-successful-workflow: true
          main-branch-name: master
      - run: npm ci
      - run: npx nx run-many --target=build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
      - run: curl -X POST -d {} ${hook}

  store-build-lib-artifacts:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Create components package if it exists
          command: |
            if [[ -d ./dist/libs/ui ]];
            then
              cd dist/libs
              tar czf ui.components.tar.gz ./ui/
            fi
      - store_artifacts:
          path: dist/libs/ui.components.tar.gz
          destination: ryzen-components
      - run:
          name: Create features package if it exists
          command: |
            if [[ -d ./dist/libs/features ]];
            then
              cd dist/libs
              tar czf features.components.tar.gz ./features/
            fi
      - store_artifacts:
          path: dist/libs/features.components.tar.gz
          destination: features-components
workflows:
  version: 2
  ryzen:
    jobs:
      - agent:
          name: Nx Cloud Agent << matrix.ordinal >>
          matrix:
            parameters:
              ordinal: [1, 2, 3]
      - main:
          name: Nx Cloud Main
      - build-deploy:
          name: Nx deploy apps
          requires:
            - Nx Cloud Main
      - store-build-lib-artifacts:
          requires:
            - Nx deploy apps
          name: Nx store artifacts
